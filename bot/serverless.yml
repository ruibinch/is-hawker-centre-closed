org: ruibinch
app: ihcc
service: ishawkercentreclosed

frameworkVersion: '2'

custom:
  dotenv:
    exclude:
      - APIG_DEV
      - APIG_PROD
    required:
      env:
        - BOT_TOKEN_dev
        - BOT_TOKEN_prod
        - REGION
        - TABLE_CLOSURES
        - TABLE_HC
        - TABLE_USERS
        - TABLE_FEEDBACK
        - TABLE_INPUTS
  webpack:
    packager: yarn
    includeModules: true
  botFolder: src/bot
  handlersFolder: src/handlers

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${env:REGION}
  lambdaHashingVersion: 20201221
  environment:
    TZ: Asia/Singapore
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:provider.stage}
    BOT_TOKEN: ${env:BOT_TOKEN_${self:provider.stage}}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:PutItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_CLOSURES}-${self:provider.stage}'
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_HC}-${self:provider.stage}'
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:CreateBackup
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_USERS}-${self:provider.stage}'
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:CreateBackup
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_FEEDBACK}-${self:provider.stage}'
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_INPUTS}-${self:provider.stage}'
        - Effect: Allow
          Action:
            - dynamodb:ListBackups
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/*/backup/*'
        - Effect: Allow
          Action:
            - dynamodb:DeleteBackup
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_USERS}-${self:provider.stage}/backup/*'
        - Effect: Allow
          Action:
            - dynamodb:DeleteBackup
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_FEEDBACK}-${self:provider.stage}/backup/*'

package:
  patterns:
    - '!./**'
    - 'src/**'

functions:
  bot:
    handler: ${self:custom.botFolder}/handler.bot
    events:
      - http:
          method: post
          path: /bot
    maximumEventAge: 60
    maximumRetryAttempts: 0
  notificationsTrigger:
    handler: ${self:custom.handlersFolder}/notificationsTrigger.handler
    events:
      # runs daily at 22:00 UTC, or 6am SGT
      - schedule: cron(0 22 * * ? *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
  scanNewEntriesTrigger:
    handler: ${self:custom.handlersFolder}/scanNewEntriesTrigger.handler
    events:
      # runs every Sun at 20:00 UTC, or 4am SGT
      - schedule: cron(0 20 ? * sun *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
  runBackupTrigger:
    handler: ${self:custom.handlersFolder}/runBackupTrigger.handler
    timeout: 30
    events:
      # runs every Sun at 20:05 UTC, or 4:05am SGT
      - schedule: cron(5 20 ? * sun *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
  runResetAndUpdateDbTrigger:
    handler: ${self:custom.handlersFolder}/runResetAndUpdateDbTrigger.handler
    timeout: 120
    events:
      # runs every Sun at 20:10 UTC, or 4:10am SGT
      - schedule: cron(10 20 ? * sun *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
