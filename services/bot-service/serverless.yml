service: ihcc-bot

frameworkVersion: ^4.17.0
configValidationMode: error

custom:
  build:
    esbuild:
      bundle: true
      minify: true
      sourcemap: false
      target: 'node20'
      platform: 'node'
      treeShaking: true
  botHandlers: src/bot/handlers

plugins:
  - serverless-offline
  - serverless-disable-functions

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${env:REGION}
  environment:
    TZ: Asia/Singapore
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:provider.stage}
    TELEGRAM_BOT_TOKEN: ${param:TELEGRAM_BOT_TOKEN}
    DISCORD_BOT_TOKEN: ${env:DISCORD_BOT_TOKEN}
    DISCORD_ADMIN_DEV_CHANNEL_ID: ${env:DISCORD_ADMIN_DEV_CHANNEL_ID}
    DISCORD_ADMIN_PROD_CHANNEL_ID: ${env:DISCORD_ADMIN_PROD_CHANNEL_ID}
    DISCORD_FEEDBACK_CHANNEL_ID: ${env:DISCORD_FEEDBACK_CHANNEL_ID}
    REGION: ${env:REGION}
    SENTRY_DSN: ${env:SENTRY_DSN}
    TABLE_CLOSURES: ${env:TABLE_CLOSURES}
    TABLE_HC: ${env:TABLE_HC}
    TABLE_USERS: ${env:TABLE_USERS}
    TABLE_FEEDBACK: ${env:TABLE_FEEDBACK}
    TABLE_INPUTS: ${env:TABLE_INPUTS}
    ARTIFACTS_BUCKET: ${env:ARTIFACTS_BUCKET}
  layers:
    common:
      name: ihcc-common-layer-${self:provider.stage}
      description: Common dependencies for IHC services
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_CLOSURES}-${self:provider.stage}'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_HC}-${self:provider.stage}'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_USERS}-${self:provider.stage}'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_FEEDBACK}-${self:provider.stage}'
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${env:TABLE_INPUTS}-${self:provider.stage}'

package:
  patterns:
    - '!./**'
    - 'src/**'

functions:
  bot:
    handler: ${self:custom.botHandlers}/bot.handler
    events:
      - http:
          method: post
          path: /bot
    maximumEventAge: 60
    maximumRetryAttempts: 0
    layers:
      - { Ref: CommonLambdaLayer }
  notificationsTrigger:
    handler: ${self:custom.botHandlers}/notificationsTrigger.handler
    events:
      - schedule: cron(0 22 * * ? *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
    layers:
      - { Ref: CommonLambdaLayer }
  scanNewFeedbackTrigger:
    handler: ${self:custom.botHandlers}/scanNewFeedbackTrigger.handler
    enabled: ${self:custom.scanNewFeedbackTriggerEnabled.${opt:stage, 'dev'}}
    events:
      - schedule: cron(3 20 * * ? *)
    maximumEventAge: 60
    maximumRetryAttempts: 0
    layers:
      - { Ref: CommonLambdaLayer }
